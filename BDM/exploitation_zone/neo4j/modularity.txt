CALL gds.alpha.modularity.stream('ProductCommunities', { communityProperty: 'intermediateComId', relationshipWeightProperty: 'count' })
YIELD communityId as interCommunityId, modularity as interModularity
WITH interCommunityId, interModularity
CALL gds.alpha.modularity.stream('ProductCommunities', { communityProperty: 'communityId', relationshipWeightProperty: 'count' })
YIELD communityId, modularity
WITH interCommunityId, interModularity, communityId, modularity
MATCH (p:Product {intermediateComId:interCommunityId , communityId:communityId})
RETURN  p.communityId as communityId, modularity, p.intermediateComId as intermediateComId, interModularity, p.id as id,p.label as label
ORDER BY modularity,interModularity,communityId, intermediateComId DESC
